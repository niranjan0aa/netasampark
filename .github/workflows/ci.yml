name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  php-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo_pgsql, bcmath, zip
          coverage: none
      - name: Cache composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        working-directory: backend
        run: |
          if [ ! -f composer.json ]; then echo "Backend not bootstrapped yet" && exit 0; fi
          composer install --prefer-dist --no-progress --no-suggest
      - name: Copy env
        working-directory: backend
        run: |
          if [ -f .env.example ]; then cp .env.example .env; fi
          php -r "file_exists('artisan') && copy('artisan','artisan');"
      - name: Generate key and run tests
        working-directory: backend
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: test
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          QUEUE_CONNECTION: sync
        run: |
          if [ ! -f artisan ]; then echo "No Laravel app, skipping tests" && exit 0; fi
          php artisan key:generate
          php artisan migrate --no-interaction -vvv
          php artisan test --no-interaction -vvv

  node-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build frontend assets
        working-directory: backend
        run: |
          if [ ! -f package.json ]; then echo "No frontend yet" && exit 0; fi
          corepack enable
          if [ -f pnpm-lock.yaml ]; then corepack prepare pnpm@latest --activate && pnpm i && pnpm build; else npm ci || npm i && npm run build; fi
